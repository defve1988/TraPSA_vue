{"version":3,"sources":["webpack:///../../../src/components/VMenu/VMenu.ts"],"names":["baseMixins","name","provide","isInMenu","theme","this","directives","ClickOutside","Resize","props","auto","closeOnClick","type","default","closeOnContentClick","disabled","disableKeys","maxHeight","Number","offsetX","offsetY","openOnClick","openOnHover","origin","transition","Boolean","data","calculatedTopAuto","defaultOffset","hasJustFocused","listIndex","resizeTimeout","selectedIndex","tiles","computed","activeTile","calculatedLeft","menuWidth","Math","dimensions","content","parseFloat","calcXOverflow","calcLeft","calculatedMaxHeight","height","calculatedMaxWidth","calculatedMinWidth","minWidth","activator","width","pageWidth","isNaN","parseInt","calculatedTop","top","calcYOverflow","hasClickableTiles","find","tile","styles","maxWidth","left","transformOrigin","zIndex","activeZIndex","watch","isActive","isContentActive","next","prev","classList","remove","created","$attrs","hasOwnProperty","mounted","methods","activate","requestAnimationFrame","calcScrollPosition","$el","$refs","maxScrollTop","calcLeftAuto","calcTopAuto","Array","tileDistanceFromMenuTop","firstTileOffsetTop","computedTop","changeListIndex","e","closeConditional","target","contains","genActivatorAttributes","attributes","id","genActivatorListeners","listeners","genTransition","$createElement","genDirectives","value","args","include","genContent","options","attrs","role","staticClass","class","menuable__content__active","contentClass","style","ref","on","click","keydown","onKeyDown","getTiles","querySelectorAll","mouseEnterHandler","mouseLeaveHandler","nextTile","prevTile","setTimeout","onResize","clearTimeout","window","render","attach","arg","h","showLazyContent","root","light","dark"],"mappings":"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","file":"js/chunk-2cb3767a.aff97d0f.js","sourcesContent":["// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Detachable,\n  Menuable,\n  Returnable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        this.$refs.content.scrollTop = tile.offsetTop - tile.clientHeight\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorAttributes () {\n      const attributes = Activatable.options.methods.genActivatorAttributes.call(this)\n\n      if (this.activeTile && this.activeTile.id) {\n        return {\n          ...attributes,\n          'aria-activedescendant': this.activeTile.id,\n        }\n      }\n\n      return attributes\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      const content = this.genContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [content])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: () => { this.isActive = false },\n          args: {\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        } as any)\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement('div', options, this.getContentSlot())\n    },\n    getTiles () {\n      if (!this.$refs.content) return\n\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n        this.isActive = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [this.genTransition()]),\n      ]),\n    ])\n  },\n})\n"],"sourceRoot":""}