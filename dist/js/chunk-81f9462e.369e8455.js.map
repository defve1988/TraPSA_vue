{"version":3,"sources":["webpack:///../../../src/components/VTextField/index.ts","webpack:///./src/components/widgets/UploadCard.vue?623d","webpack:///src/components/widgets/UploadCard.vue","webpack:///./src/components/widgets/UploadCard.vue?9d2b","webpack:///../../../src/components/VFileInput/VFileInput.ts","webpack:///./src/components/widgets/UploadCard.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","upload_card","title","attrs","label","on","onFileChanged","isloading","upload_data","staticRenderFns","name","props","data","computed","methods","file","VTextField","model","prop","event","chips","clearable","type","default","counterSizeString","counterString","placeholder","prependIcon","readonly","showSize","Boolean","validator","v","includes","smallChips","truncateLength","Number","value","val","classes","computedCounterValue","fileCount","isMultiple","lazyValue","$vuetify","lang","t","bytes","internalArrayValue","reduce","size","base","internalValue","get","set","isDirty","length","isLabelActive","$attrs","hasOwnProperty","text","map","truncatedText","hasChips","watch","handler","immediate","$refs","input","clearableCallback","genChips","small","genInput","genPrependSlot","icon","genIcon","genSlot","genSelectionText","genSelections","children","$scopedSlots","index","class","selection","genTextFieldSlot","node","click","onInput","files","e","onKeyDown","truncateText","str","charsKeepOneSide","Math","component","VBtn","VCard","VCardText","VCardTitle","VFileInput","VIcon"],"mappings":"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","file":"js/chunk-81f9462e.369e8455.js","sourcesContent":["import VTextField from './VTextField'\n\nexport { VTextField }\nexport default VTextField\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',[_c('v-card-title',[_c('span',{staticClass:\"subtitle-1\"},[_vm._v(_vm._s(_vm.upload_card.title))])]),_c('v-card-text',[_c('v-file-input',{attrs:{\"accept\":\".csv\",\"multiple\":\"\",\"label\":_vm.upload_card.label,\"prepend-icon\":\"mdi-paperclip\"},on:{\"change\":_vm.onFileChanged}}),_c('v-btn',{staticClass:\"text-none\",attrs:{\"color\":\"primary\",\"loading\":_vm.isloading},on:{\"click\":_vm.upload_data}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"mdi-cloud-upload\")]),_vm._v(\"Upload \")],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-card>\r\n    <v-card-title>\r\n      <span class=\"subtitle-1\">{{ upload_card.title }}</span>\r\n    </v-card-title>\r\n    <v-card-text>\r\n      <v-file-input\r\n        @change=\"onFileChanged\"\r\n        accept=\".csv\"\r\n        multiple\r\n        :label=\"upload_card.label\"\r\n        prepend-icon=\"mdi-paperclip\"\r\n      ></v-file-input>\r\n      <v-btn\r\n        color=\"primary\"\r\n        class=\"text-none\"\r\n        :loading=\"isloading\"\r\n        @click=\"upload_data\"\r\n      >\r\n        <v-icon left>mdi-cloud-upload</v-icon>Upload\r\n      </v-btn>\r\n    </v-card-text>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\n// upload card: upload a csv file and update one of the data value stored in app_data\r\n//  eg:\r\n//     upload_card:{\r\n//     title:\"Upload Site Data\",\r\n//     label:\"Site Locations\",\r\n//     isLoading:false,\r\n//     update_data:\"sites\",\r\n//     isExpand: true,}\r\nimport { mapState, mapMutations } from \"vuex\";\r\nimport csv_data from \"@/assets/js/data_format\";\r\nexport default {\r\n  name: \"upload\",\r\n  props: [\"upload_card\"],\r\n  data: () => ({\r\n    isloading: false,\r\n    file: {},\r\n  }),\r\n  computed: {\r\n    ...mapState({\r\n      app_data: \"app_data\",\r\n    }),\r\n  },\r\n  methods: {\r\n    ...mapMutations([\"UPDATE_DATA\", \"UPDATE_SITE\"]),\r\n    onFileChanged(file) {\r\n      this.file = file;\r\n    },\r\n\r\n    upload_data() {\r\n      this.isloading = true;\r\n      csv_data\r\n        .read_csv_multiple(\r\n          this.file,\r\n          this.app_data.missing_data,\r\n          this.upload_card.isExpand\r\n        )\r\n        .then((result) => {\r\n          // console.log(this.upload_card.update_data);\r\n          console.log(result)\r\n          this.UPDATE_DATA({\r\n            data: result,\r\n            name: this.upload_card.update_data,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          this.app_data.ui_control.snackbar = {\r\n            show: true,\r\n            text: \"Failed to load file!\",\r\n            color: \"error\",\r\n          };\r\n        });\r\n      this.isloading = false;\r\n    },\r\n  },\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UploadCard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UploadCard.vue?vue&type=script&lang=js&\"","// Styles\nimport './VFileInput.sass'\n\n// Extensions\nimport VTextField from '../VTextField'\n\n// Components\nimport { VChip } from '../VChip'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Utilities\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\nexport default VTextField.extend({\n  name: 'v-file-input',\n\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    } as PropValidator<boolean | 1000 | 1024>,\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22,\n    },\n    type: {\n      type: String,\n      default: 'file',\n    },\n    value: {\n      default: undefined,\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    } as PropValidator<File | File[]>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true,\n      }\n    },\n    computedCounterValue (): string {\n      const fileCount = (this.isMultiple && this.lazyValue)\n        ? this.lazyValue.length\n        : (this.lazyValue instanceof File) ? 1 : 0\n\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount)\n\n      const bytes = this.internalArrayValue.reduce((bytes: number, { size = 0 }: File) => {\n        return bytes + size\n      }, 0)\n\n      return this.$vuetify.lang.t(\n        this.counterSizeString,\n        fileCount,\n        humanReadableFileSize(bytes, this.base === 1024)\n      )\n    },\n    internalArrayValue (): File[] {\n      return wrapInArray(this.internalValue)\n    },\n    internalValue: {\n      get (): File[] {\n        return this.lazyValue\n      },\n      set (val: File | File[]) {\n        this.lazyValue = val\n        this.$emit('change', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.internalArrayValue.length > 0\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    isMultiple (): boolean {\n      return this.$attrs.hasOwnProperty('multiple')\n    },\n    text (): string[] {\n      if (!this.isDirty) return [this.placeholder]\n\n      return this.internalArrayValue.map((file: File) => {\n        const {\n          name = '',\n          size = 0,\n        } = file\n\n        const truncatedText = this.truncateText(name)\n\n        return !this.showSize\n          ? truncatedText\n          : `${truncatedText} (${humanReadableFileSize(size, this.base === 1024)})`\n      })\n    },\n    base (): 1000 | 1024 | undefined {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n  },\n\n  watch: {\n    readonly: {\n      handler (v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this)\n      },\n      immediate: true,\n    },\n    value (v) {\n      const value = this.isMultiple ? v : v ? [v] : []\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = ''\n      }\n    },\n  },\n\n  methods: {\n    clearableCallback () {\n      this.internalValue = this.isMultiple ? [] : undefined\n      this.$refs.input.value = ''\n    },\n    genChips () {\n      if (!this.isDirty) return []\n\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: { small: this.smallChips },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue\n            internalValue.splice(index, 1)\n            this.internalValue = internalValue // Trigger the watcher\n          },\n        },\n      }, [text]))\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n      delete input.data!.domProps!.value\n\n      // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n      delete input.data!.on!.input\n      input.data!.on!.change = this.onInput\n\n      return [this.genSelections(), input]\n    },\n    genPrependSlot () {\n      if (!this.prependIcon) return null\n\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click()\n      })\n\n      return this.genSlot('prepend', 'outer', [icon])\n    },\n    genSelectionText (): string[] {\n      const length = this.text.length\n\n      if (length < 2) return this.text\n      if (this.showSize && !this.counter) return [this.computedCounterValue]\n      return [this.$vuetify.lang.t(this.counterString, length)]\n    },\n    genSelections () {\n      const children = []\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file: File, index: number) => {\n          if (!this.$scopedSlots.selection) return\n\n          children.push(\n            this.$scopedSlots.selection({\n              text: this.text[index],\n              file,\n              index,\n            })\n          )\n        })\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection,\n        },\n      }, children)\n    },\n    genTextFieldSlot () {\n      const node = VTextField.options.methods.genTextFieldSlot.call(this)\n\n      node.data!.on = {\n        ...(node.data!.on || {}),\n        click: () => this.$refs.input.click(),\n      }\n\n      return node\n    },\n    onInput (e: Event) {\n      const files = [...(e.target as HTMLInputElement).files || []]\n\n      this.internalValue = this.isMultiple ? files : files[0]\n\n      // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n      this.initialValue = this.internalValue\n    },\n    onKeyDown (e: KeyboardEvent) {\n      this.$emit('keydown', e)\n    },\n    truncateText (str: string) {\n      if (str.length < Number(this.truncateLength)) return str\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2)\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./UploadCard.vue?vue&type=template&id=1b964ad6&\"\nimport script from \"./UploadCard.vue?vue&type=script&lang=js&\"\nexport * from \"./UploadCard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VFileInput } from 'vuetify/lib/components/VFileInput';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\ninstallComponents(component, {VBtn,VCard,VCardText,VCardTitle,VFileInput,VIcon})\n"],"sourceRoot":""}