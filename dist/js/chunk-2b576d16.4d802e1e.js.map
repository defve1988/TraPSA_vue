{"version":3,"sources":["webpack:///./src/assets/js/data_plot.js","webpack:///../../../src/components/VHover/VHover.ts","webpack:///./src/assets/js/data_process.js"],"names":["covert_rgb","hex","alpha","length","r","parseInt","substring","g","b","PlotCase","case_name","this","small_fig","width","height","medium_fig","large_fig","small_margin","t","l","medium_margin","large_margin","color_theme","plotly_config","small","displaylogo","responsive","displayModeBar","staticPlot","medium","large","editable","layout_default","margin","font","size","showlegend","autosize","legend","xanchor","yanchor","x","y","my_div","Plotly","purge","file_name","toImage","format","then","url","pom","document","createElement","href","setAttribute","click","type","fig_size","fig_margin","layout_config","Object","assign","title","update","relayout","data","color_count","trace_data","entries","index","d","push","name","chemical","autobinx","histnorm","marker","color","line","opacity","fig_layout_config","bargap","bargroupgap","barmode","xaxis","yaxis","layout","set_layout","newPlot","mode","connectgaps","tickformat","avg_type","box_data","x_title","x_tickes","map","getMonth","Array","from","keys","getHours","getDay","outliercolor","boxpoints","boxmode","tickvals","ticktext","trendline","Date","lr","x1","x2","y1","y2","fill","theta","polar","radialaxis","ticksuffix","angle","dtick","angularaxis","direction","high","all","bgcolor","tickwidth","linewidth","layer","props","disabled","default","value","undefined","methods","onMouseEnter","onMouseLeave","render","$scopedSlots","element","hover","isActive","mouseenter","mouseleave","data_cal_pscf","data_cal_cpf","measurement","wind","threshold","directions","lower","upper","threshold_conc","sort","a","selected_chemical","max_wind_speed","reduce","prev","curr","wind_speed","cbpf_high","cbpf_all","speed","WD","WS","Dir_index","Level","conc","count_high","count_all","i","wind_direction","find","TimeString","j","cpf_high","cpf_all","color_map","cbpf","c","trace","cliponaxis","res","reverse","cpf","data_cal_windrose","count","wind_F","text","wind_rose","Math","round","sen_slope","cal_period_avg","period","getDeviation","array","n","mean","date_string","year","getFullYear","month","date","getDate","hour","includes","sum","deviation","getStandardDeviation","sqrt","pow","linearRegression","sum_x","sum_y","sum_xy","sum_xx","sum_yy","slope","min","apply","max","intercept","data_reduce","data_merge","data_filter","k","filtered","filter","item","data_filter_2"],"mappings":"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","file":"js/chunk-2b576d16.4d802e1e.js","sourcesContent":["import Plotly from 'plotly.js'\r\n\r\n// import * as d3 from 'd3'\r\n\r\nfunction covert_rgb(hex, alpha) {\r\n    if (hex.length === 3) {\r\n        hex = `${hex[0]}${hex[0]}${hex[1]}${hex[1]}${hex[2]}${hex[2]}`;\r\n    }\r\n\r\n    const r = parseInt(hex.substring(0, 2), 16);\r\n    const g = parseInt(hex.substring(2, 4), 16);\r\n    const b = parseInt(hex.substring(4, 6), 16);\r\n\r\n    return `rgba(${r},${g},${b},${alpha})`;\r\n}\r\n\r\nexport default class PlotCase {\r\n    constructor(case_name) {\r\n        this.case_name = case_name;\r\n\r\n        this.small_fig = { width: 300, height: 180 }\r\n        this.medium_fig = { width: 750, height: 400 }\r\n        this.large_fig = { width: 1180, height: 600 }\r\n\r\n        this.small_margin = { r: 20, t: 25, b: 25, l: 20 }\r\n        this.medium_margin = { r: 20, t: 50, b: 25, l: 20 }\r\n        this.large_margin = { r: 100, t: 50, b: 75, l: 125 }\r\n\r\n        this.color_theme = [\r\n            '1E88E5',\r\n            '28965A',\r\n            'E53E20',\r\n            '7CB342',\r\n            'd95282',\r\n            'FBC02D',\r\n            '00B8DC',\r\n            '232322',\r\n            'AAAAAA',\r\n        ]\r\n\r\n        this.plotly_config = {\r\n            small: {\r\n                displaylogo: false,\r\n                responsive: true,\r\n                displayModeBar: false,\r\n                staticPlot: true\r\n            },\r\n            medium: {\r\n                displaylogo: false,\r\n                responsive: true,\r\n                displayModeBar: false,\r\n                staticPlot: false,\r\n            },\r\n            large: {\r\n                displaylogo: false,\r\n                responsive: true,\r\n                displayModeBar: false,\r\n                staticPlot: false,\r\n                editable: true\r\n            }\r\n        };\r\n\r\n        this.layout_default = {\r\n            small: {\r\n                margin: this.small_margin,\r\n                width: this.small_fig.width,\r\n                height: this.small_fig.height,\r\n                font: { size: 10 },\r\n                showlegend: false,\r\n                autosize: true,\r\n            },\r\n            medium: {\r\n                margin: this.medium_margin,\r\n                width: this.medium_fig.width,\r\n                height: this.medium_fig.height,\r\n                font: { size: 14 },\r\n                showlegend: true,\r\n                legend: { font: { size: 12 }, xanchor: \"auto\", yanchor: \"auto\", x: 1, y: 0 },\r\n                autosize: true,\r\n            },\r\n            large: {\r\n                margin: this.large_margin,\r\n                width: this.large_fig.width,\r\n                height: this.large_fig.height,\r\n                font: { size: 14 },\r\n                showlegend: true,\r\n                legend: { font: { size: 12 }, xanchor: \"auto\", yanchor: \"auto\", x: 1, y: 0 },\r\n                autosize: true,\r\n            }\r\n        }\r\n    }\r\n\r\n    clear(my_div) {\r\n        Plotly.purge(my_div)\r\n    }\r\n\r\n    save_image(my_div, file_name) {\r\n        Plotly.toImage(\r\n            my_div, {\r\n            format: 'png',\r\n            height: 800,\r\n            width: 1200,\r\n        }).then(\r\n            function (url) {\r\n                var pom = document.createElement(\"a\");\r\n                pom.href = url;\r\n                pom.setAttribute(\"download\", file_name+\".png\");\r\n                pom.click();\r\n            });\r\n    }\r\n\r\n    set_fig_size(type, fig_size, fig_margin) {\r\n        // fig_size:{width:100,height:200}\r\n        // fig_margin: { r: 20, t: 25, b: 25, l: 20 }\r\n        if (type == \"small\") {\r\n            this.layout_default.small.width = fig_size.width\r\n            this.layout_default.small.height = fig_size.height\r\n            this.layout_default.small.margin = fig_margin\r\n        }\r\n        else if (type == \"medium\") {\r\n            this.layout_default.medium.width = fig_size.width\r\n            this.layout_default.medium.height = fig_size.height\r\n            this.layout_default.medium.margin = fig_margin\r\n        }\r\n        else {\r\n            this.layout_default.large.width = fig_size.width\r\n            this.layout_default.large.height = fig_size.height\r\n            this.layout_default.large.margin = fig_margin\r\n        }\r\n    }\r\n\r\n    set_layout(type, layout_config) {\r\n        if (type == \"small\") {\r\n            return Object.assign(this.layout_default.small, layout_config)\r\n        }\r\n        else if (type == \"medium\") {\r\n            return Object.assign(this.layout_default.medium, layout_config)\r\n        }\r\n        else {\r\n            return Object.assign(this.layout_default.large, layout_config)\r\n        }\r\n    }\r\n\r\n    set_title(my_div, title) {\r\n        var update = {\r\n            title: title\r\n        }\r\n        Plotly.relayout(my_div, update)\r\n    }\r\n\r\n    plot_hist(my_div, data, type, layout_config = {}) {\r\n        var color_count = 0\r\n        var trace_data = []\r\n        for (const [index, d] of data.entries()) {\r\n            trace_data.push(\r\n                {\r\n                    x: d.x,\r\n                    name: d.chemical,\r\n                    autobinx: true,\r\n                    histnorm: \"count\",\r\n                    marker: {\r\n                        color: covert_rgb(this.color_theme[(index + color_count) % 9], 1),\r\n                        line: {\r\n                            color: covert_rgb(this.color_theme[(index + color_count) % 9], 1),\r\n                            width: 1\r\n                        }\r\n                    },\r\n                    opacity: 0.7,\r\n                    type: \"histogram\",\r\n                })\r\n        }\r\n        var fig_layout_config = {\r\n            bargap: 0.05,\r\n            bargroupgap: 0.2,\r\n            barmode: \"overlay\",\r\n            title: type == \"small\" ? \"\" : \"Histgram\",\r\n            xaxis: type == \"small\" ? {} : { title: \"Value\" },\r\n            yaxis: type == \"small\" ? {} : { title: \"Count\" }\r\n        }\r\n        Object.assign(fig_layout_config, layout_config)\r\n        var layout = this.set_layout(type, fig_layout_config)\r\n        Plotly.newPlot(my_div, trace_data, layout, this.plotly_config[type]);\r\n    }\r\n\r\n    plot_line(my_div, data, type, layout_config = {}) {\r\n        var color_count = 1\r\n        var trace_data = []\r\n        for (const [index, d] of data.entries()) {\r\n            trace_data.push(\r\n                {\r\n                    mode: \"lines\",\r\n                    name: d.chemical,\r\n                    x: d.x,\r\n                    y: d.y,\r\n                    connectgaps: false,\r\n                    line: { color: covert_rgb(this.color_theme[(index + color_count) % 9], 0.7) },\r\n                    marker: {\r\n                        size: type == \"small\" ? 2 : 5,\r\n                        color: covert_rgb(this.color_theme[index], 0.7)\r\n                    },\r\n                }\r\n            )\r\n        }\r\n        var fig_layout_config = {\r\n            title: type == \"small\" ? \"\" : \"Time Series\",\r\n            xaxis: type == \"small\" ? { type: 'date', tickformat: '%b %Y' } : { title: \"Date\", type: 'date', tickformat: '%b-%d %Y' },\r\n            yaxis: type == \"small\" ? {} : { title: \"Conc.\" },\r\n        }\r\n        Object.assign(fig_layout_config, layout_config)\r\n        var layout = this.set_layout(type, fig_layout_config)\r\n\r\n        Plotly.newPlot(my_div, trace_data, layout, this.plotly_config[type]);\r\n    }\r\n\r\n    plot_averaged_box(my_div, data, type, avg_type, layout_config = {}) {\r\n        var box_data = []\r\n        var color = ''\r\n        var title = ''\r\n        var x_title = ''\r\n        var x_tickes = []\r\n\r\n        for (const [index, d] of data.entries()) {\r\n            var trace_data = []\r\n            switch (avg_type) {\r\n                case \"monthly\":\r\n                    trace_data = d.x.map(x => x.getMonth())\r\n                    title = \"Monthly\"\r\n                    x_title = \"month\"\r\n                    color = covert_rgb(this.color_theme[(index + 2) % 9], 0.7)\r\n                    x_tickes = Array.from(Array(12).keys())\r\n                    break\r\n                case \"diel\":\r\n                    trace_data = d.x.map(x => x.getHours())\r\n                    title = \"Diel\"\r\n                    x_title = \"hour\"\r\n                    color = covert_rgb(this.color_theme[(index + 3) % 9], 0.7)\r\n                    x_tickes = Array.from(Array(24).keys())\r\n                    break\r\n                case \"weekday\":\r\n                    trace_data = d.x.map(x => x.getDay())\r\n                    title = \"Weekday\"\r\n                    x_title = \"weekday\"\r\n                    color = covert_rgb(this.color_theme[(index + 4) % 9], 0.7)\r\n                    x_tickes = Array.from(Array(7).keys())\r\n                    break\r\n            }\r\n\r\n            box_data.push({\r\n                x: trace_data,\r\n                y: d.y,\r\n                name: d.chemical,\r\n                marker: {\r\n                    color: color,\r\n                    outliercolor: 'rgba(219, 64, 82, 0.6)',\r\n                    line: {\r\n                        outliercolor: 'rgba(219, 64, 82, 1.0)',\r\n                    }\r\n                },\r\n                type: 'box',\r\n                boxpoints: 'Outliers'\r\n            })\r\n\r\n        }\r\n\r\n        var fig_layout_config = {\r\n            boxmode: 'group',\r\n            title: type == \"small\" ? \"\" : title,\r\n            xaxis: type == \"small\" ? { tickvals: x_tickes, ticktext: x_tickes } : { title: x_title, tickvals: x_tickes, ticktext: x_tickes },\r\n            yaxis: type == \"small\" ? {} : { title: \"Conc.\" },\r\n        }\r\n        Object.assign(fig_layout_config, layout_config)\r\n        var layout = this.set_layout(type, fig_layout_config)\r\n\r\n        Plotly.newPlot(my_div, box_data, layout, this.plotly_config[type]);\r\n    }\r\n\r\n    plot_trend(my_div, data, type, layout_config = {}) {\r\n        var color_count = 5\r\n        var trace_data = []\r\n        for (const [index, d] of data.entries()) {\r\n            trace_data.push(\r\n                {\r\n                    type: \"scatter\",\r\n                    mode: \"markers\",\r\n                    name: d.chemical,\r\n                    x: d.x,\r\n                    y: d.y,\r\n                    connectgaps: false,\r\n                    line: { color: covert_rgb(this.color_theme[(index + color_count) % 9], 0.5) },\r\n                    trendline: 'ols',\r\n                    marker: {\r\n                        size: type == \"small\" ? 2 : 5,\r\n                        color: covert_rgb(this.color_theme[index], 0.7)\r\n                    },\r\n                }\r\n            )\r\n            trace_data.push(\r\n                {\r\n                    type: \"scatter\",\r\n                    mode: \"lines\",\r\n                    name: d.chemical,\r\n                    x: [new Date(d.lr.line.x1), new Date(d.lr.line.x2)],\r\n                    y: [d.lr.line.y1, d.lr.line.y2],\r\n                    connectgaps: false,\r\n                    line: { color: covert_rgb(this.color_theme[(index + color_count) % 9], 1) },\r\n                }\r\n            )\r\n        }\r\n        var fig_layout_config = {\r\n            title: type == \"small\" ? \"\" : \"Trend\",\r\n            xaxis: type == \"small\" ? { type: 'date', tickformat: '%b %Y' } : { title: \"Date\", type: 'date', tickformat: '%b-%d %Y' },\r\n            yaxis: type == \"small\" ? {} : { title: \"Conc.\" },\r\n        }\r\n        Object.assign(fig_layout_config, layout_config)\r\n        var layout = this.set_layout(type, fig_layout_config)\r\n\r\n        Plotly.newPlot(my_div, trace_data, layout, this.plotly_config[type]);\r\n    }\r\n\r\n    plot_windrose(my_div, data, type, layout_config = {}) {\r\n        let d = [\"North\", \"NNE\", \"NE\", \"ENE\", \"East\", \"ESE\", \"SE\", \"SSE\", \"South\", \"SSW\", \"SW\", \"WSW\", \"West\", \"WNS\", \"NW\", \"NNW\"]\r\n\r\n        if (data == null) {\r\n            data = [{\r\n                r: new Array(16).fill(0),\r\n                theta: d,\r\n                type: \"barpolar\"\r\n            },\r\n            ]\r\n        }\r\n\r\n        var fig_layout_config = {\r\n            title: type == \"small\" ? \"\" : \"Wind Rose\",\r\n            polar: {\r\n                barmode: \"overlay\",\r\n                bargap: 0,\r\n                radialaxis: { ticksuffix: \"%\", angle: 45, dtick: 5 },\r\n                angularaxis: { direction: \"clockwise\" },\r\n            }\r\n        }\r\n        Object.assign(fig_layout_config, layout_config)\r\n        var layout = this.set_layout(type, fig_layout_config)\r\n\r\n        Plotly.newPlot(my_div, data, layout, this.plotly_config[type]);\r\n\r\n    }\r\n\r\n    plot_cpf(my_div, data, type, layout_config = {}) {\r\n        var trace_data = [data.high, data.all]\r\n        var fig_layout_config = {\r\n            title: type == \"small\" ? \"\" : \"CPF Analysis\",\r\n            polar: {\r\n                radialaxis: { ticksuffix: \"%\", angle: 45, dtick: 5 },\r\n                angularaxis: { direction: \"clockwise\" },\r\n            }\r\n        }\r\n        Object.assign(fig_layout_config, layout_config)\r\n        var layout = this.set_layout(type, fig_layout_config)\r\n\r\n        Plotly.newPlot(my_div, trace_data, layout, this.plotly_config[type]);\r\n    }\r\n\r\n    plot_cbpf(my_div, data, type, layout_config = {}) {\r\n        var fig_layout_config = {\r\n            title: type == \"small\" ? \"\" : \"CBPF Analysis\",\r\n            polar: {\r\n                bgcolor: '#162876',\r\n                radialaxis: { ticksuffix: \"%\", angle: 45, dtick: 5 },\r\n                angularaxis: {\r\n                    direction: \"clockwise\",\r\n                    tickwidth: 2,\r\n                    linewidth: 3,\r\n                    layer: \"above traces\"\r\n                },\r\n            }\r\n        }\r\n        Object.assign(fig_layout_config, layout_config)\r\n        var layout = this.set_layout(type, fig_layout_config)\r\n\r\n        Plotly.newPlot(my_div, data, layout, this.plotly_config[type]);\r\n    }\r\n}\r\n","// Mixins\nimport Delayable from '../../mixins/delayable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport { VNode, ScopedSlotChildren } from 'vue/types/vnode'\n\nexport default mixins(\n  Delayable,\n  Toggleable\n  /* @vue/component */\n).extend({\n  name: 'v-hover',\n\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    value: {\n      type: Boolean,\n      default: undefined,\n    },\n  },\n\n  methods: {\n    onMouseEnter () {\n      this.runDelay('open')\n    },\n    onMouseLeave () {\n      this.runDelay('close')\n    },\n  },\n\n  render (): VNode {\n    if (!this.$scopedSlots.default && this.value === undefined) {\n      consoleWarn('v-hover is missing a default scopedSlot or bound value', this)\n\n      return null as any\n    }\n\n    let element: VNode | ScopedSlotChildren\n\n    /* istanbul ignore else */\n    if (this.$scopedSlots.default) {\n      element = this.$scopedSlots.default({ hover: this.isActive })\n    }\n\n    if (Array.isArray(element) && element.length === 1) {\n      element = element[0]\n    }\n\n    if (!element || Array.isArray(element) || !element.tag) {\n      consoleWarn('v-hover should only contain a single element', this)\n\n      return element as any\n    }\n\n    if (!this.disabled) {\n      element.data = element.data || {}\n      this._g(element.data, {\n        mouseenter: this.onMouseEnter,\n        mouseleave: this.onMouseLeave,\n      })\n    }\n\n    return element\n  },\n})\n","export default {\r\n    linearRegression,\r\n    getStandardDeviation,\r\n    cal_period_avg,\r\n    sen_slope,\r\n    data_filter,\r\n    data_reduce,\r\n    data_merge,\r\n    data_cal_windrose,\r\n    data_filter_2,\r\n    data_cal_cpf,\r\n    data_cal_pscf\r\n}\r\n\r\nfunction data_cal_pscf() {\r\n\r\n}\r\n\r\nfunction data_cal_cpf(measurement, wind, threshold = 0.7) {\r\n    var directions = [\r\n        { d: \"N\", lower: 348.75, upper: 11.25 },\r\n        { d: \"NNE\", lower: 11.25, upper: 33.75 },\r\n        { d: \"NE\", lower: 33.75, upper: 56.25 },\r\n        { d: \"ENE\", lower: 56.25, upper: 78.75 },\r\n        { d: \"E\", lower: 78.75, upper: 101.25 },\r\n        { d: \"ESE\", lower: 101.25, upper: 123.75 },\r\n        { d: \"SE\", lower: 123.75, upper: 146.25 },\r\n        { d: \"SSE\", lower: 146.25, upper: 168.75 },\r\n        { d: \"S\", lower: 168.75, upper: 191.25 },\r\n        { d: \"SSW\", lower: 191.25, upper: 213.75 },\r\n        { d: \"SW\", lower: 213.75, upper: 236.25 },\r\n        { d: \"WSW\", lower: 236.25, upper: 258.75 },\r\n        { d: \"W\", lower: 258.75, upper: 281.25 },\r\n        { d: \"WNS\", lower: 281.25, upper: 303.75 },\r\n        { d: \"NW\", lower: 303.75, upper: 326.25 },\r\n        { d: \"NNW\", lower: 326.25, upper: 348.75 }]\r\n\r\n    directions = [\r\n        { d: \"N\", lower: 348.75, upper: 11.25 },\r\n        { d: \"NNE\", lower: 11.25, upper: 33.75 },\r\n        { d: \"NE\", lower: 33.75, upper: 56.25 },\r\n        { d: \"ENE\", lower: 56.25, upper: 78.75 },\r\n        { d: \"E\", lower: 78.75, upper: 101.25 },\r\n        { d: \"ESE\", lower: 101.25, upper: 123.75 },\r\n        { d: \"SE\", lower: 123.75, upper: 146.25 },\r\n        { d: \"SSE\", lower: 146.25, upper: 168.75 },\r\n        { d: \"S\", lower: 168.75, upper: 191.25 },\r\n        { d: \"SSW\", lower: 191.25, upper: 213.75 },\r\n        { d: \"SW\", lower: 213.75, upper: 236.25 },\r\n        { d: \"WSW\", lower: 236.25, upper: 258.75 },\r\n        { d: \"W\", lower: 258.75, upper: 281.25 },\r\n        { d: \"WNS\", lower: 281.25, upper: 303.75 },\r\n        { d: \"NW\", lower: 303.75, upper: 326.25 },\r\n        { d: \"NNW\", lower: 326.25, upper: 348.75 }]\r\n\r\n    var threshold_conc = null\r\n    measurement.sort((a, b) => (a.selected_chemical > b.selected_chemical) ? -1 : 1)\r\n    threshold_conc = measurement[parseInt(measurement.length * (1 - threshold))].selected_chemical\r\n    // var max_wind_speed = Math.max(...wind.map(x => x.wind_speed))\r\n    var max_wind_speed = wind.reduce((prev, curr) => curr.wind_speed > prev ? curr.wind_speed : prev, -999)\r\n\r\n    var cbpf_high = Array(parseInt(max_wind_speed) + 1).fill(0)\r\n    var cbpf_all = Array(parseInt(max_wind_speed) + 1).fill(0)\r\n    cbpf_high = cbpf_high.map((x, index) => { return { speed: index + 1, r: Array(16).fill(0) } })\r\n    cbpf_all = cbpf_all.map((x, index) => { return { speed: index + 1, r: Array(16).fill(0) } })\r\n\r\n    var count_high = 0\r\n    var count_all = 0\r\n\r\n    var WD, WS, Dir_index, Level, conc\r\n    for (let i = 0; i < wind.length; i++) {\r\n        WD = wind[i].wind_direction\r\n        WS = wind[i].wind_speed\r\n        conc = measurement.find(x => x.TimeString == wind[i].TimeString)\r\n        if (WD !== null && WS !== null && conc !== undefined) {\r\n            conc = conc.selected_chemical\r\n            if (WD > 348.75) { Dir_index = 0 }\r\n            else {\r\n                for (let j = 1; j < directions.length; j++) {\r\n                    if (WD <= directions[j].upper) {\r\n                        Dir_index = j\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let j = 0; j < cbpf_high.length; j++) {\r\n                if (WS <= cbpf_high[j].speed) {\r\n                    Level = j\r\n                    break;\r\n                }\r\n            }\r\n\r\n            cbpf_all[Level].r[Dir_index] += 1\r\n            count_all += 1\r\n            if (conc > threshold_conc) {\r\n                cbpf_high[Level].r[Dir_index] += 1\r\n                count_high += 1\r\n            }\r\n        }\r\n    }\r\n\r\n    var cpf_high = Array(16).fill(0)\r\n    var cpf_all = Array(16).fill(0)\r\n    for (let i = 0; i < directions.length; i++) {\r\n        for (let j = 0; j < cbpf_high.length; j++) {\r\n            if (cbpf_high[j].r[i] > 0) {\r\n                cpf_high[i] += cbpf_high[j].r[i]\r\n            }\r\n            if (cbpf_all[j].r[i] > 0) {\r\n                cpf_all[i] += cbpf_all[j].r[i]\r\n            }\r\n        }\r\n    }\r\n\r\n    cpf_high = cpf_high.map(x => x / count_high)\r\n    cpf_all = cpf_all.map(x => x / count_all)\r\n    // TODO:\r\n    // - speed up/ avoid ui block\r\n    // - color map \r\n    // - layer order\r\n    var color_map = [\r\n        { value: 0.3, color: '#8ef5b7' },\r\n        { value: 0.2, color: '#A0DAB7' },\r\n        { value: 0.15, color: '#1F93C0' },\r\n        { value: 0.1, color: '#2F528F' },\r\n        { value: 0.05, color: '#162876' },\r\n    ]\r\n    // const theta = {\r\n    //     \"N\": 0,\r\n    //     \"NNE\": 22.5,\r\n    //     \"NE\": 45,\r\n    //     \"ENE\": 67.5,\r\n    //     \"E\": 90,\r\n    //     \"ESE\": 112.5,\r\n    //     \"SE\": 135,\r\n    //     \"SSE\": 157.5,\r\n    //     \"S\": 180,\r\n    //     \"SSW\": 202.5,\r\n    //     \"SW\": 225,\r\n    //     \"WSW\": 247.5,\r\n    //     \"W\": 270,\r\n    //     \"WNS\": 292.5,\r\n    //     \"NW\": 315,\r\n    //     \"NNW\": 337.5\r\n    // }\r\n\r\n    const theta = [\r\n        0,\r\n        22.5,\r\n        45,\r\n        67.5,\r\n        90,\r\n        112.5,\r\n        135,\r\n        157.5,\r\n        180,\r\n        202.5,\r\n        225,\r\n        247.5,\r\n        270,\r\n        292.5,\r\n        315,\r\n        337.5\r\n    ]\r\n\r\n    var cbpf = []\r\n    for (let c = 0; c < color_map.length; c++) {\r\n        var trace = {\r\n            r: [],\r\n            theta: [],\r\n            type: \"scatterpolargl\",\r\n            mode: \"markers\",\r\n            marker: {\r\n                color: color_map[c].color,\r\n                // size: 10 + c * 5,\r\n                size: 30,\r\n                line: {\r\n                    color: \"white\"\r\n                },\r\n                opacity: 0.7\r\n            },\r\n            cliponaxis: false\r\n        }\r\n        if (c == 0) {\r\n            trace.r = Array(16).fill(0)\r\n            trace.theta = theta\r\n        }\r\n        cbpf.push(trace)\r\n    }\r\n    // console.log(count_high, count_all)\r\n    for (let i = 0; i < cbpf_high.length; i++) {\r\n        for (let j = 0; j < cbpf_high[i].r.length; j++) {\r\n            var value = cbpf_high[i].r[j] / cbpf_all[i].r[j]\r\n            if (value > 0.3) {\r\n                cbpf[0].r.push(i)\r\n                cbpf[0].theta.push(theta[j])\r\n            }\r\n            else if (value > 0.2) {\r\n                cbpf[1].r.push(i)\r\n                cbpf[1].theta.push(theta[j])\r\n            }\r\n            else if (value > 0.15) {\r\n                cbpf[2].r.push(i)\r\n                cbpf[2].theta.push(theta[j])\r\n            }\r\n            else if (value > 0.1) {\r\n                cbpf[3].r.push(i)\r\n                cbpf[3].theta.push(theta[j])\r\n            }\r\n            else {\r\n                cbpf[4].r.push(i)\r\n                cbpf[4].theta.push(theta[j])\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    // for (let i = 0; i < cbpf_high.length; i++) {\r\n    //     var r = []\r\n    //     for (let j = 1; j < cbpf_high[i].r.length; j++) {\r\n    //         r.push(cbpf_high[i].r[j] / cbpf_all[i].r[j])\r\n    //     }\r\n    //     cbpf.push({\r\n    //         r: r,\r\n    //         theta: theta,\r\n    //         type: \"scatterpolargl\",\r\n    //         mode: \"markers\",\r\n    //         marker: {\r\n    //             color: \"rgb(102,166,30)\",\r\n    //             size: 15,\r\n    //             line: {\r\n    //                 color: \"white\"\r\n    //             },\r\n    //             opacity: 0.7\r\n    //         },\r\n    //         cliponaxis: false\r\n    //     })\r\n    // }\r\n    var res = {\r\n        cbpf: cbpf.reverse(),\r\n        cpf: {\r\n            high: { r: cpf_high, theta: theta, type: 'scatterpolar', fill: 'toself', name: 'High' },\r\n            all: { r: cpf_all, theta: theta, type: 'scatterpolar', fill: 'toself', name: 'All' }\r\n        }\r\n    }\r\n    // console.log(new Date - tic)\r\n    // console.log(res.cbpf)\r\n    return res\r\n}\r\n\r\nfunction data_cal_windrose(wind) {\r\n    // directions.map((x) => x.d)\r\n    var directions = [\r\n        { d: \"N\", lower: 348.75, upper: 11.25 },\r\n        { d: \"NNE\", lower: 11.25, upper: 33.75 },\r\n        { d: \"NE\", lower: 33.75, upper: 56.25 },\r\n        { d: \"ENE\", lower: 56.25, upper: 78.75 },\r\n        { d: \"E\", lower: 78.75, upper: 101.25 },\r\n        { d: \"ESE\", lower: 101.25, upper: 123.75 },\r\n        { d: \"SE\", lower: 123.75, upper: 146.25 },\r\n        { d: \"SSE\", lower: 146.25, upper: 168.75 },\r\n        { d: \"S\", lower: 168.75, upper: 191.25 },\r\n        { d: \"SSW\", lower: 191.25, upper: 213.75 },\r\n        { d: \"SW\", lower: 213.75, upper: 236.25 },\r\n        { d: \"WSW\", lower: 236.25, upper: 258.75 },\r\n        { d: \"W\", lower: 258.75, upper: 281.25 },\r\n        { d: \"WNS\", lower: 281.25, upper: 303.75 },\r\n        { d: \"NW\", lower: 303.75, upper: 326.25 },\r\n        { d: \"NNW\", lower: 326.25, upper: 348.75 }]\r\n    var count = 0\r\n    var wind_F = [\r\n        { text: \"Calm\", speed: 2, legend: \"<2 m/s\", color: \"#062CFB\", r: Array(16).fill(0) },\r\n        { text: \"Light air\", speed: 6, legend: \"2-6 m/s\", color: \"#17D3FF\", r: Array(16).fill(0) },\r\n        { text: \"Light breeze\", speed: 12, legend: \"6-12 m/s\", color: \"#7DFE7A\", r: Array(16).fill(0) },\r\n        { text: \"Gentle breeze\", speed: 19, legend: \"12-19 m/s\", color: \"#FFE50D\", r: Array(16).fill(0) },\r\n        { text: \"Moderate breeze\", speed: 30, legend: \"19-30 m/s\", color: \"#FFE50D\", r: Array(16).fill(0) },\r\n        { text: \"Fresh\", speed: 40, legend: \"30-40 m/s\", color: \"#810006\", r: Array(16).fill(0) },\r\n        { text: \"strong\", speed: 100, legend: \">40 m/s\", color: \"#810006\", r: Array(16).fill(0) },]\r\n\r\n    // calcualte each bins\r\n    var WD, WS, Dir_index, Level\r\n    for (let i = 0; i < wind.length; i++) {\r\n        WD = wind[i].wind_direction\r\n        WS = wind[i].wind_speed\r\n        if (WD !== null && WS !== null) {\r\n            count += 1\r\n            if (WD > 348.75) { Dir_index = 0 }\r\n            else {\r\n                for (let j = 1; j < directions.length; j++) {\r\n                    if (WD <= directions[j].upper) {\r\n                        Dir_index = j\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let j = 0; j < wind_F.length; j++) {\r\n                if (WS <= wind_F[j].speed) {\r\n                    Level = j\r\n                    break;\r\n                }\r\n            }\r\n            wind_F[Level].r[Dir_index] += 1\r\n        }\r\n    }\r\n    // var calm = 0\r\n    // for (let i = 0; i < directions.length; i++) {\r\n    //     calm += wind_F[0].r[i]\r\n    // }\r\n    // for (let i = 0; i < directions.length; i++) {\r\n    //     wind_F[0].r[i]=calm\r\n    // }\r\n\r\n    for (let i = 0; i < directions.length; i++) {\r\n        for (let j = 1; j < wind_F.length; j++) {\r\n            if (wind_F[j].r[i] > 0) {\r\n                wind_F[j].r[i] += wind_F[j - 1].r[i]\r\n            }\r\n        }\r\n    }\r\n    var wind_rose = []\r\n    for (let i = 0; i < wind_F.length; i++) {\r\n        wind_rose.push({\r\n            r: wind_F[i].r.map((x) => { return Math.round(x / count * 100 * 100) / 100 }),\r\n            theta: [\"N\", \"NNE\", \"NE\", \"ENE\", \"E\", \"ESE\", \"SE\", \"SSE\", \"S\", \"SSW\", \"SW\", \"WSW\", \"W\", \"WNS\", \"NW\", \"NNW\"],\r\n            name: wind_F[i].legend,\r\n            marker: { color: wind_F[i].color },\r\n            type: \"barpolar\"\r\n        })\r\n    }\r\n    // console.log(res)\r\n    return wind_rose.reverse()\r\n}\r\n\r\nfunction sen_slope() {\r\n\r\n\r\n}\r\n\r\nfunction cal_period_avg(data, period) {\r\n    function getDeviation(array) {\r\n        const n = array.length\r\n        const mean = array.reduce((a, b) => a + b) / n\r\n        return array.map(x => (x - mean) * (x - mean)).reduce((a, b) => a + b) / n\r\n    }\r\n    var res = data.reduce((prev, curr) => {\r\n        var year = curr.x.getFullYear()\r\n        var month = curr.x.getMonth() + 1\r\n        var date = curr.x.getDate()\r\n        var hour = curr.x.getHours()\r\n        var date_string\r\n        switch (period) {\r\n            case \"hourly\":\r\n                date_string = year + '-' + month + '-' + date + ' ' + hour\r\n                break\r\n            case \"daily\":\r\n                date_string = year + '-' + month + '-' + date\r\n                break\r\n            case \"monthly\":\r\n                date_string = year + '-' + month\r\n                break\r\n            case \"yearly\":\r\n                date_string = year\r\n                break\r\n        }\r\n\r\n        if (curr.y !== null) {\r\n            if (!prev.date.includes(date_string)) {\r\n                prev.date.push(date_string)\r\n                prev[date_string] = { sum: 0, count: 0, value: [] }\r\n                prev[date_string].sum = curr.y\r\n                prev[date_string].count = 1\r\n                prev[date_string].value.push(curr.y)\r\n            }\r\n            else {\r\n                prev[date_string].sum += curr.y\r\n                prev[date_string].count += 1\r\n                prev[date_string].value.push(curr.y)\r\n            }\r\n        }\r\n        return prev\r\n    }, { date: [] })\r\n    var x = []\r\n    var y = []\r\n    var deviation = []\r\n    for (var i = 0; i < res.date.length; i++) {\r\n        x.push(new Date(res.date[i]))\r\n        y.push(res[res.date[i]].sum / res[res.date[i]].count)\r\n        deviation.push(getDeviation(res[res.date[i]].value))\r\n    }\r\n    return { x: x, y: y, deviation: deviation }\r\n}\r\n\r\nfunction getStandardDeviation(array) {\r\n    const n = array.length\r\n    const mean = array.reduce((a, b) => a + b) / n\r\n    return Math.sqrt(array.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n)\r\n}\r\n\r\nfunction linearRegression(y, x) {\r\n    var lr = {};\r\n    var n = y.length;\r\n    var sum_x = 0;\r\n    var sum_y = 0;\r\n    var sum_xy = 0;\r\n    var sum_xx = 0;\r\n    var sum_yy = 0;\r\n\r\n    for (var i = 0; i < y.length; i++) {\r\n\r\n        sum_x += x[i];\r\n        sum_y += y[i];\r\n        sum_xy += (x[i] * y[i]);\r\n        sum_xx += (x[i] * x[i]);\r\n        sum_yy += (y[i] * y[i]);\r\n    }\r\n\r\n\r\n    lr['slope'] = (n * sum_xy - sum_x * sum_y) / (n * sum_xx - sum_x * sum_x);\r\n    lr['intercept'] = (sum_y - lr.slope * sum_x) / n;\r\n    lr['r2'] = Math.pow((n * sum_xy - sum_x * sum_y) / Math.sqrt((n * sum_xx - sum_x * sum_x) * (n * sum_yy - sum_y * sum_y)), 2);\r\n    // apply max/min to array as follow to avoid error in web worker\r\n    var min = Math.min.apply(null, x)\r\n    var max = Math.max.apply(null, x)\r\n    lr['line'] = {\r\n        x1: min,\r\n        y1: min * lr.slope + lr.intercept,\r\n        x2: max,\r\n        y2: max * lr.slope + lr.intercept,\r\n    }\r\n    return lr;\r\n}\r\n\r\n\r\nasync function data_reduce() {\r\n    // return the reduced the data with reduce_func for reduce_col\r\n    // data: app_data.measurement.data\r\n    // reduce_col: \"year\"\r\n    // reduce_func: mean\r\n    // reduced: average conc for each year\r\n\r\n    // data, reduce_col, reduce_func\r\n}\r\n\r\nasync function data_merge() {\r\n    // merge two data with the same timestamp and site\r\n}\r\n\r\nasync function data_filter(data, data_filter) {\r\n    // return filtered data with data_filter\r\n    // data: app_data.measurement.data\r\n    // data_filter: {\"site\":[\"x1\"],\"year\":[\"y1\",\"y2\"]}\r\n    // data and data_filter should have same keys\r\n    // filtered: the measurment data for site x1 at y1 and y2\r\n\r\n    let filtered = data\r\n    for (var k in data_filter) {\r\n        filtered = filtered.filter(item => { return data_filter[k].includes(item[k]) })\r\n    }\r\n    return filtered\r\n\r\n}\r\n\r\nfunction data_filter_2(data, data_filter) {\r\n    // return filtered data with data_filter\r\n    // data: app_data.measurement.data\r\n    // data_filter: {\"site\":[\"x1\"],\"year\":[\"y1\",\"y2\"]}\r\n    // data and data_filter should have same keys\r\n    // filtered: the measurment data for site x1 at y1 and y2\r\n\r\n    let filtered = data\r\n    for (var k in data_filter) {\r\n        filtered = filtered.filter(item => { return data_filter[k].includes(item[k]) })\r\n    }\r\n    return filtered\r\n\r\n}"],"sourceRoot":""}